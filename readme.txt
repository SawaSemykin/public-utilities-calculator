Описание работы приложения
Приложение рассчитывает сумму платежа по следующим видам коммунальных услуг: электроэнергия, холодная вода, горячая вода, водоотведение.
Для входа в приложение пользователю предлагается ввести свой лицевой счёт, после чего отображается страница о платеже. Платёж рассчитывается за период, где начало периода - запись в БД с показаниями приборов
пользователя в позапрошлом месяце, конец периода - запись с показаниями приборов в прошлом месяце.
Страница о платеже также содержит форму для передачи показаний приборов в текущем месяце. Эти показания будут учтены в расчёте платежей за следующие периоды. 


Для запуска и редактирования приложения на своём копьютере

1. В СУБД выполнить скрипты script1.sql и script2.sql. Таблица public_utilities_calculator.reading должна содержать записи показаний за позапрошлый и прошлый месяцы - это границы оплачиваемого периода
(см. описание работы приложения). Если записей нет, то их необходимо создать средствами СУБД.
2. В Eclipse создать Dynamic Web Project. Перенести файлы с исходным кодом в каталог src в пакет ru.sawasemykin.web.jdbc,  файл context.xml - WebContent/META-INF, JAR-файлы - WebContent/WEB-INF/lib,
страницы HTML и JSP - WebContent, стили CSS - WebContent/css.


Инструменты и технические решения

В работе приложения использованы следующие инструменты:
Среда разработки Eclipse Java EE 
Система управления базами данных MySQL
Сервер Tomcat

Приложение состоит из следующих компонентов:
Сервлета
Класс для работы с БД
Объекты передачи данных
Страницы JSP и HTML.

Работа приложения построена на паттерне проектирования модель - представление - контроллер (MVC).
Сервлета - контроллер - осуществляет взаимодействие компонентов приложения. Класс для работы с БД - модель - выполняет подключение к БД, используя JDBC API, для чтения или записи данных, используемых при расчёте
платежей или выводе информации о пользователе.
Страница JSP - представление - отвечает за внешнее оформление приложения. Для обмена данными между компонентами приложения используются
объекты передачи данных  - паттерн проектирования (DAO).
// описать resource injection



Список TODO по проекту

Добавить возможность рассёта платежа сразу за несколько месяцев
Добавить автоматическую запись показаний в БД, если пользователь не передал показания. Значения показаний рассчитывать как среднее арифметическое за последние последние два периода.
Обработать исключения.
Организовать навигацию по страницам приложения.
